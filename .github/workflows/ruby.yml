name: Github Testing
on: [push, pull_request]

jobs:
  bundle_audit:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.1
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: config bundler
        run:  |
          bundle config set without 'development staging production'
          bundle config set deployment '[secure]'
          bundle env
          head -n1 $(which bundle)
      - name: Bundle Audit Check
        run: bundle exec bundle-audit check --update

  brakeman:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.1
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: config bundler
        run:  |
          bundle config set without 'development staging production'
          bundle config set deployment '[secure]'
          bundle env
          head -n1 $(which bundle)
      - name: Run Brakeman
        run: bundle exec brakeman --quiet --skip-libs --exit-on-warn -i config/brakeman.ignore

  test:
    services:
      postgres:
        image: postgres:17
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USERNAME: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5       

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        ruby: [ '3.4.1' ]
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ endsWith(matrix.ruby, 'head') || matrix.ruby == 'debug' }}
    steps:

      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Hack sources.list
        run: sudo sed -i 's|http://azure.archive.ubuntu.com/ubuntu/|http://mirror.arizona.edu/ubuntu/|g' /etc/apt/sources.list                                                                                          

      - name: config bundler
        run:  |
          bundle config set without 'development staging production'
          bundle config set deployment '[secure]'
          bundle env
          head -n1 $(which bundle)

      - name: Install wkhtmltopdf
        run: sudo apt-get update && sudo apt-get install -y wkhtmltopdf

      - name: Setup configuration files
        run: |
          cp config/customization.yml.sample config/customization.yml
          cp config/database.yml.sample config/database.yml

      - name: Run Tests
        env:
          PG_DATABASE: postgres
          PG_HOST: localhost
          PG_USER: postgres
          PG_PASSWORD: password
          PG_PORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_ENV: test
          COVERAGE: true
          DISABLE_SPRING: 1
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load
          bundle exec rails test

      - uses: qltysh/qlty-action/coverage@v2
        if: github.event_name == 'push'
        with:
          token: ${{ secrets.QLTY_TOKEN }}
          files: coverage/.resultset.json

      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 14
