name: Sync PR with Issue and Projects v2

on:
  pull_request:
    types: [opened, edited, reopened, assigned, closed]

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
    - name: Set up GitHub CLI
      uses: actions/setup-gh@v3

    - name: Authenticate GitHub CLI
      run: gh auth login --with-token <<< "${{ secrets.PROJECTS_TOKEN }}"

    - name: Extract linked issue number
      id: extract
      run: |
        echo "PR body:"
        echo "${{ github.event.pull_request.body }}"
        ISSUE=$(echo "${{ github.event.pull_request.body }}" | grep -oE '#[0-9]+' | head -n1 | tr -d '#')
        echo "Extracted issue: $ISSUE"
        echo "issue_number=$ISSUE" >> $GITHUB_OUTPUT

    - name: Fail early if no issue number was found
      if: steps.extract.outputs.issue_number == ''
      run: |
        echo "❌ No issue number found. Make sure PR body includes e.g. 'Fixes #123'"
        exit 1

    - name: Get issue node_id
      id: issue
      run: |
        ISSUE_NUMBER=${{ steps.extract.outputs.issue_number }}
        RESPONSE=$(gh api repos/${{ github.repository }}/issues/$ISSUE_NUMBER)
        NODE_ID=$(echo "$RESPONSE" | jq -r .node_id)
        echo "node_id=$NODE_ID" >> $GITHUB_OUTPUT
        echo "Extracted node_id: $NODE_ID"

    - name: Get or create project item ID
      id: project_item
      run: |
        PROJECT_ID="PVT_kwDOAHYFo84AnPvS"
        ISSUE_NODE_ID=${{ steps.issue.outputs.node_id }}

        echo "Trying to add issue to project..."
        ADD=$(gh api graphql -f query='
          mutation($project:ID!, $content:ID!) {
            addProjectV2ItemById(input: {
              projectId: $project,
              contentId: $content
            }) {
              item {
                id
              }
            }
          }' -f project=$PROJECT_ID -f content=$ISSUE_NODE_ID || true)

        ITEM_ID=$(echo "$ADD" | jq -r '.data.addProjectV2ItemById.item.id')

        if [ "$ITEM_ID" == "null" ] || [ -z "$ITEM_ID" ]; then
          echo "Already in project. Querying for existing item..."
          FIND=$(gh api graphql -f query='
            query($id:ID!) {
              node(id: $id) {
                ... on Issue {
                  projectItems(first: 10) {
                    nodes {
                      id
                      project {
                        id
                      }
                    }
                  }
                }
              }
            }' -f id=$ISSUE_NODE_ID)

          ITEM_ID=$(echo "$FIND" | jq -r '.data.node.projectItems.nodes[] | select(.project.id == "'$PROJECT_ID'") | .id')
        fi

        if [ -z "$ITEM_ID" ]; then
          echo "❌ Failed to get project item ID"
          exit 1
        fi

        echo "item_id=$ITEM_ID" >> $GITHUB_OUTPUT
        echo "Project item ID: $ITEM_ID"

    - name: Set status to In Progress
      if: github.event.action != 'closed'
      run: |
        echo "Setting status to In Progress..."
        gh api graphql -f query='
          mutation($project:ID!, $item:ID!, $field:ID!, $option:ID!) {
            updateProjectV2ItemFieldValue(input: {
              projectId: $project,
              itemId: $item,
              fieldId: $field,
              value: { singleSelectOptionId: $option }
            }) {
              projectV2Item { id }
            }
          }' \
          -f project="PVT_kwDOAHYFo84AnPvS" \
          -f item="${{ steps.project_item.outputs.item_id }}" \
          -f field="PVTSSF_lADOAHYFo84AnPvSzgfAydE" \
          -f option="47fc9ee4"

    - name: Set status to Done if PR is merged
      if: github.event.pull_request.merged == true
      run: |
        echo "Setting status to Done..."
        gh api graphql -f query='
          mutation($project:ID!, $item:ID!, $field:ID!, $option:ID!) {
            updateProjectV2ItemFieldValue(input: {
              projectId: $project,
              itemId: $item,
              fieldId: $field,
              value: { singleSelectOptionId: $option }
            }) {
              projectV2Item { id }
            }
          }' \
          -f project="PVT_kwDOAHYFo84AnPvS" \
          -f item="${{ steps.project_item.outputs.item_id }}" \
          -f field="PVTSSF_lADOAHYFo84AnPvSzgfAydE" \
          -f option="98236657"
