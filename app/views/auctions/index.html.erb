<%= component 'common/hero', title: t('.title') %>

<% if user_signed_in? %>
  <%= turbo_stream_from "auctions_#{current_user&.id}" %>
<% else %>
  <%= turbo_stream_from "auctions" %>
<% end %>

<%= component 'pages/auction/cards' %>

<div class="o-container">
  <div class="c-table c-table--sortable" data-controller="english-offers" 
    data-action="turbo:before-stream-render@document->english-offers#beforeStreamRender"
    data-english-offers-user-id-value="<%= current_user&.id %>"
    data-english-offers-bid-text-value="<%= t('auctions.bid') %>"
    data-english-offers-participate-text-value="<%= t('auctions.participate') %>"
    data-english-offers-english-text-value="<%= t('auctions.english') %>"
    data-english-offers-blind-text-value="<%= t('auctions.blind') %>">

    <%= component 'pages/auction/filter', current_user: current_user %>

    <!-- 
    These parameters are passed to the Common::Table::Component. These parameters are used to generate headers in the table component. The name "column_name" indicates the name of the column. This is necessary for sorting, so the name of this column should correspond to the name of the column in the database table. If you want to make it so that the data is not sorted by the column, then you should add a nil value. "Caption" is the table header, and "options" are additional parameters that are passed into the tags. 
    -->
    <% header_collection = [{ column: 'domain_name', caption: t('auctions.domain_name'), options: { class: "sorting" } },
                            { column: 'platform', caption: t('auctions.auction_type'), options: { class: "sorting" } },
                            { column: 'ends_at', caption: t('auctions.ends_at'), options: { class: "sorting" } },
                            { column: nil, caption: t('auctions.current_price'), options: { class: "sorting" } },
                            { column: nil, caption: t('auctions.offer_owner'), options: { class: "sorting" } },
                            { column: nil, caption: t('auctions.offer_actions'), options: { class: 'u-text-left u-text-center-l' } }] %>

    <!-- In the Stimulus controller, I use the Turbo class with frame parameters named 'results' for table sorting. This means that rendering the table with the new sort order should occur within the scope of the turbo_frame_tag with the name "results". For it to work correctly, it's necessary to wrap the table content within this turbo_frame_tag with "results" name. The name "results" is assigned as a value for the orderable Stimulus controller in the table component. -->
    <%= turbo_frame_tag "results" do %>

      <!-- Options attributes are used as table attributes -->
      <%= component 'common/table', header_collection:, options: { class: 'js-table-dt dataTable no-footer' } do %>

        <!-- "The body of the table also needs to be in the component block, so the component wraps it with the necessary tags." -->

        <%= tag.tbody id: "bids", class: 'contents' do %>
          <% @auctions.uniq.each do |auction| %>
            <%= render partial: 'auction', locals: { auction: auction, user: current_user, updated: false } %>
          <% end %>
        <% end %>
      <% end %>

      <%= component 'common/pagy', pagy: @pagy %>
    <% end %>

  </div>

  <div class="u-text-center u-mt-40">
    <%= component 'common/links/link_button', link_title: t('auctions.all_list'), href: auctions_path(show_all: 'true'), color: 'ghost' %>
  </div>
</div>
<!-- Table -- Sortable  -->
